<!doctype html>
<html lang="pl">
<head>
  <meta charset="utf-8" />
  <title>ZarzƒÖdzanie Klientami</title>
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
  <div class="container py-4">
    <header class="d-flex flex-wrap align-items-center gap-2 mb-4">
      <h1 class="h4 m-0">üë• ZarzƒÖdzanie Klientami</h1>
      <div class="ms-auto">
        <button id="addClientBtn" class="btn btn-primary">Dodaj nowego klienta</button>
      </div>
    </header>

    <div id="alertBox" class="mb-3"></div>

    <div class="card">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-hover align-middle">
                    <thead class="table-light">
                        <tr>
                            <th>ID</th>
                            <th>Imiƒô i nazwisko</th>
                            <th>Telefon</th>
                            <th>Adres</th>
                            <th>Status</th>
                            <th class="text-end">Akcje</th>
                        </tr>
                    </thead>
                    <tbody id="clientsTableBody">
                        <!-- Wiersze bƒôdƒÖ wstawiane tutaj przez JavaScript -->
                    </tbody>
                </table>
            </div>
        </div>
    </div>
  </div>

  <!-- Modal do dodawania/edycji klienta -->
  <div class="modal fade" id="clientModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="clientModalLabel">Dane Klienta</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
        </div>
        <div class="modal-body">
          <form id="clientForm">
            <input type="hidden" id="clientId">
            <div class="mb-3">
              <label for="clientName" class="form-label">Imiƒô i nazwisko</label>
              <input type="text" class="form-control" id="clientName" required>
            </div>
            <div class="mb-3">
              <label for="clientPhone" class="form-label">Telefon</label>
              <input type="tel" class="form-control" id="clientPhone">
            </div>
            <div class="mb-3">
              <label for="clientAddress" class="form-label">Adres</label>
              <input type="text" class="form-control" id="clientAddress">
            </div>
            <div class="form-check form-switch mb-3">
              <input class="form-check-input" type="checkbox" id="clientActive" checked>
              <label class="form-check-label" for="clientActive">Klient aktywny</label>
            </div>
          </form>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Anuluj</button>
          <button type="button" class="btn btn-primary" id="saveClientBtn">Zapisz</button>
        </div>
      </div>
    </div>
  </div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
<script>
document.addEventListener('DOMContentLoaded', () => {
    // --- POCZƒÑTEK POPRAWKI ---
    const API = ""; // Ta linia by≈Ça brakujƒÖca
    // --- KONIEC POPRAWKI ---

    const addClientBtn = document.getElementById('addClientBtn');
    const clientsTableBody = document.getElementById('clientsTableBody');
    const clientModal = new bootstrap.Modal(document.getElementById('clientModal'));
    const saveClientBtn = document.getElementById('saveClientBtn');
    const clientForm = document.getElementById('clientForm');

    const showAlert = (msg, type = "success") => {
        const box = document.getElementById("alertBox");
        box.innerHTML = `<div class="alert alert-${type} alert-dismissible fade show" role="alert">
            ${msg}<button type="button" class="btn-close" data-bs-dismiss="alert"></button></div>`;
    };

    async function fetchJSON(url, options = {}) {
        try {
            const response = await fetch(url, options);
            if (!response.ok) {
                const errorData = await response.json().catch(() => ({ error: `B≈ÇƒÖd serwera: ${response.status}` }));
                throw new Error(errorData.error);
            }
            return response.json();
        } catch (error) {
            console.error("B≈ÇƒÖd API:", error);
            throw error;
        }
    }

    async function loadClients() {
        clientsTableBody.innerHTML = '<tr><td colspan="6" class="text-center">≈Åadowanie...</td></tr>';
        try {
            const clients = await fetchJSON(`${API}/api/clients?include_inactive=true`);
            renderClients(clients);
        } catch (error) {
            clientsTableBody.innerHTML = `<tr><td colspan="6" class="text-center text-danger">WystƒÖpi≈Ç b≈ÇƒÖd: ${error.message}</td></tr>`;
        }
    }

    function renderClients(clients) {
        if (!clients || clients.length === 0) {
            clientsTableBody.innerHTML = '<tr><td colspan="6" class="text-center">Brak zdefiniowanych klient√≥w.</td></tr>';
            return;
        }
        clientsTableBody.innerHTML = clients.map(client => `
            <tr>
                <td>${client.client_id}</td>
                <td>${client.full_name}</td>
                <td>${client.phone || '‚Äî'}</td>
                <td>${client.address || '‚Äî'}</td>
                <td>
                    <span class="badge ${client.active ? 'text-bg-success' : 'text-bg-secondary'}">
                        ${client.active ? 'Aktywny' : 'Nieaktywny'}
                    </span>
                </td>
                <td class="text-end">
                    <button class="btn btn-sm btn-outline-primary" onclick="handleEdit(${client.client_id})">Edytuj</button>
                    <button class="btn btn-sm btn-outline-danger" onclick="handleDelete(${client.client_id})">Usu≈Ñ</button>
                </td>
            </tr>
        `).join('');
    }

    function openModalForCreate() {
        clientForm.reset();
        document.getElementById('clientId').value = '';
        document.getElementById('clientModalLabel').textContent = 'Dodaj nowego klienta';
        document.getElementById('clientActive').checked = true;
        clientModal.show();
    }

    window.handleEdit = async (clientId) => {
        clientForm.reset();
        document.getElementById('clientModalLabel').textContent = 'Edytuj dane klienta';
        try {
            const client = await fetchJSON(`${API}/api/clients/${clientId}`);
            document.getElementById('clientId').value = client.id;
            document.getElementById('clientName').value = client.full_name;
            document.getElementById('clientPhone').value = client.phone || '';
            document.getElementById('clientAddress').value = client.address || '';
            document.getElementById('clientActive').checked = client.active;
            clientModal.show();
        } catch (error) {
            showAlert(error.message, 'danger');
        }
    };

    window.handleDelete = async (clientId) => {
        if (confirm('Czy na pewno chcesz trwale usunƒÖƒá tego klienta? Tej operacji nie mo≈ºna cofnƒÖƒá.')) {
            try {
                await fetchJSON(`${API}/api/clients/${clientId}`, { method: 'DELETE' });
                showAlert('Klient zosta≈Ç usuniƒôty.', 'success');
                loadClients();
            } catch (error) {
                showAlert(error.message, 'danger');
            }
        }
    };

    async function saveClient() {
        const clientId = document.getElementById('clientId').value;
        const payload = {
            full_name: document.getElementById('clientName').value,
            phone: document.getElementById('clientPhone').value,
            address: document.getElementById('clientAddress').value,
            active: document.getElementById('clientActive').checked
        };

        const url = clientId ? `${API}/api/clients/${clientId}` : `${API}/api/clients`;
        const method = clientId ? 'PUT' : 'POST';

        try {
            await fetchJSON(url, {
                method: method,
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(payload)
            });
            clientModal.hide();
            showAlert(`Dane klienta zosta≈Çy ${clientId ? 'zaktualizowane' : 'zapisane'}.`, 'success');
            loadClients();
        } catch (error) {
            showAlert(error.message, 'danger');
        }
    }

    addClientBtn.addEventListener('click', openModalForCreate);
    saveClientBtn.addEventListener('click', saveClient);

    loadClients();
});
</script>
</body>
</html>
